{"version":3,"file":"index.modern.js","sources":["../src/utilities/helper.ts","../src/components/loading.tsx","../src/components/folder.tsx","../src/components/file.tsx","../src/components/image.tsx","../src/components/menu.tsx","../src/components/title.tsx","../src/components/renamemodal.tsx","../src/elements/lists.tsx","../src/elements/modaltitle.tsx","../src/index.tsx"],"sourcesContent":["export function GetFileNameFromLink(link: string) {\n  const fileName = link.split('/').pop()\n  return fileName\n}\nexport function IsImage(url: string) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url)\n}\nexport const Actions = {\n  actions: {},\n  set(actions: any) {\n    this.actions = actions\n  },\n  get() {\n    return this.actions\n  }\n}\nexport function CopyToClipboard(value: any) {\n  const textArea = document.createElement('textarea')\n  textArea.value = value\n  document.body.appendChild(textArea)\n  textArea.select()\n  document.execCommand('copy')\n  textArea.remove()\n}\nexport function BeautifyData(responseData: any) {\n  const { status, data } = responseData\n  let lists = []\n  if (status) {\n    lists = data.map((list: any) => {\n      return {\n        ...list,\n        title:\n          list.type === 'folder' ? list.title : GetFileNameFromLink(list.link),\n        type: IsImage(list.link) ? 'image' : list.type\n      }\n    })\n  } else {\n    console.error(responseData)\n    throw Error('Failed to retrieve data')\n  }\n  return lists\n}\nexport function GetFileExtension(link: string) {\n  var doc = link.substring(link.lastIndexOf('/'))\n  return doc.substring(doc.lastIndexOf('.'))\n}\n","import { Spin } from 'antd'\nimport React from 'react'\n\nconst ContainerStyle = {\n  height: '200px',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}\nexport default function Loading() {\n  return (\n    <div style={ContainerStyle}>\n      <Spin size='large' />\n    </div>\n  )\n}\n","import React from 'react'\nimport { FolderFilled } from '@ant-design/icons'\n\nconst styles = {\n  fontSize: 50,\n  color: '#3399ff'\n}\nexport default function Folder() {\n  return <FolderFilled style={styles} className='fm-item-icon' />\n}\n","import React from 'react'\nimport { FileFilled } from '@ant-design/icons'\n\nconst styles = {\n  fontSize: 35,\n  color: '#fa7125'\n}\nexport default function File() {\n  return <FileFilled style={styles} className='fm-item-icon' />\n}\n","import { Image } from 'antd'\nimport React from 'react'\n\nconst imageStyle = {\n  borderRadius: '4px'\n}\nexport default function ImageFile({ src }: { src: string }) {\n  return (\n    <div>\n      <Image style={imageStyle} width={65} height={50} src={src} alt='' />\n    </div>\n  )\n}\n","import {\n  CopyOutlined,\n  // EditOutlined,\n  MoreOutlined,\n  DeleteOutlined\n} from '@ant-design/icons'\nimport { Dropdown, Menu, message } from 'antd'\nimport React from 'react'\nimport styles from '../styles.module.css'\n// import { DeleteFileFolder } from '../utilities/apicalls'\nimport { Actions, CopyToClipboard } from '../utilities/helper'\n\nconst MenuOption = ({\n  type,\n  link,\n  showRenameModal,\n  prefix,\n  refetch\n}: {\n  type: string\n  link: string\n  showRenameModal: (data: any) => void\n  refetch: any\n  prefix: string\n}) => {\n  return (\n    <React.Fragment>\n      <Dropdown\n        overlay={() => (\n          <MenuItems {...{ type, link, prefix, refetch, showRenameModal }} />\n        )}\n        trigger={['click']}\n        placement='bottomRight'\n      >\n        <div className={styles.fmItemMenuIcon}>\n          <MoreOutlined />\n        </div>\n      </Dropdown>\n    </React.Fragment>\n  )\n}\nconst MenuItems = ({\n  type,\n  link,\n  showRenameModal,\n  prefix,\n  refetch\n}: {\n  type: string\n  link: string\n  showRenameModal: any\n  prefix: string\n  refetch: any\n}) => {\n  const { deletePath, onCopy }: any = Actions.get()\n  let lists = [\n    {\n      icon: <CopyOutlined />,\n      label: 'Copy',\n      key: 0\n    },\n    // {\n    //   icon: <EditOutlined />,\n    //   label: 'Rename',\n    //   key: 1\n    // },\n    {\n      icon: <DeleteOutlined />,\n      label: 'Delete',\n      key: 2\n    }\n  ]\n  if (type === 'folder') {\n    // delete lists[0]\n    // delete lists[2]\n    lists = []\n  }\n  const onClick = async ({ key }: any) => {\n    if (Number(key) === 0) {\n      if (onCopy) {\n        onCopy(link)\n      }\n      CopyToClipboard(link)\n      message.info('Copied to clipboard')\n    }\n    if (Number(key) === 2) {\n      const confirmation = confirm('Are you sure you want to remove ?')\n      if (confirmation) {\n        alert(prefix)\n        await deletePath(prefix)\n        setTimeout(() => {\n          refetch()\n        }, 1000)\n      }\n    }\n    if (Number(key) === 1) {\n      showRenameModal()\n    }\n  }\n  return <Menu items={lists} onClick={onClick} />\n}\n\nexport default MenuOption\n","import React from 'react'\nimport { Typography } from 'antd'\nconst FileFolderTitle = ({ title }: { title: string }) => {\n  return (\n    <Typography.Paragraph\n      title={title}\n      ellipsis={{ rows: 1 }}\n      style={{\n        margin: 0,\n        height: 30,\n        padding: '4px 6px',\n        fontSize: 12,\n        lineHeight: '22px',\n        fontWeight: 500,\n        textAlign: 'center'\n      }}\n    >\n      {title}\n    </Typography.Paragraph>\n  )\n}\n\nexport default FileFolderTitle\n","import { Input, Modal } from 'antd'\nimport React, { useRef, useState } from 'react'\nimport { Actions, GetFileExtension } from '../utilities/helper'\n\nconst RenameModal = ({\n  details,\n  setRenameDetails\n}: {\n  details: any\n  setRenameDetails: any\n}) => {\n  const inputRef: any = useRef(null)\n  const { renamePath }: any = Actions.get()\n  const { _show, data } = details\n  const { type, title, link } = data\n  const ext = type === 'image' || type === 'file' ? GetFileExtension(title) : ''\n  const fileName = data?.title.replace(ext, '')\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const handleOk = async () => {\n    const confirmation = confirm('Are you sure you want to rename ?')\n    if (!confirmation) return\n    setConfirmLoading(true)\n    await renamePath(link, `${inputRef.current}${ext}`)\n    setRenameDetails({ _show: false, data: {} })\n    setConfirmLoading(false)\n  }\n\n  const handleCancel = () => {\n    setRenameDetails({ _show: false, data: {} })\n  }\n\n  return (\n    <Modal\n      title='Rename'\n      visible={_show}\n      onOk={handleOk}\n      confirmLoading={confirmLoading}\n      onCancel={handleCancel}\n    >\n      <Input\n        addonAfter={ext}\n        defaultValue={fileName}\n        autoFocus\n        onChange={(e) => (inputRef.current = e.currentTarget.value)}\n      />\n    </Modal>\n  )\n}\n\nexport default RenameModal\n","import React, { useState } from 'react'\nimport { List } from 'antd'\nimport {\n  File,\n  FileFolderTitle,\n  Folder,\n  ImageFile,\n  MenuOption,\n  RenameModal\n} from '../components'\n// eslint-disable-next-line no-unused-vars\nimport { listType } from '../types'\nimport styles from '../styles.module.css'\n\ninterface ListProps {\n  data: listType[]\n  updateBreadBumbIndex: (title: string, link: string) => void\n  refetch: any\n}\nexport default function Lists({\n  data,\n  refetch,\n  updateBreadBumbIndex\n}: ListProps) {\n  const [renameDetails, setRenameDetails] = useState<{\n    _show: boolean\n    data: {\n      title?: string\n      link?: string\n      type?: string\n    }\n  }>({\n    _show: false,\n    data: {}\n  })\n  function showRenameModal(data: any) {\n    setRenameDetails({ _show: true, data })\n  }\n  return (\n    <React.Fragment>\n      <List\n        grid={{\n          gutter: 16,\n          xs: 3,\n          sm: 4,\n          md: 5,\n          lg: 6,\n          xl: 8,\n          xxl: 9\n        }}\n        dataSource={data}\n        renderItem={({ type, title, prefix, link }: any) => (\n          <List.Item>\n            <div className={styles.fmItem}>\n              <div className={styles.fmItemContainer}>\n                {type === 'folder' ? (\n                  <span\n                    onClick={() => updateBreadBumbIndex(title, prefix)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    <Folder />\n                  </span>\n                ) : type === 'file' ? (\n                  <File />\n                ) : (\n                  <div>\n                    <ImageFile src={link} />\n                  </div>\n                )}\n              </div>\n              <MenuOption\n                {...{ type, link, prefix, refetch }}\n                showRenameModal={() => showRenameModal({ type, title, link })}\n              />\n              <FileFolderTitle {...{ title }} />\n            </div>\n          </List.Item>\n        )}\n      />\n      {renameDetails?._show ? (\n        <RenameModal\n          details={renameDetails}\n          key={`${renameDetails?._show}-rename-modal`}\n          setRenameDetails={setRenameDetails}\n        />\n      ) : (\n        <React.Fragment />\n      )}\n    </React.Fragment>\n  )\n}\n","import { Breadcrumb, Button } from 'antd'\nimport React, { useRef } from 'react'\nimport { PlusSquareOutlined, UploadOutlined } from '@ant-design/icons'\n// eslint-disable-next-line no-unused-vars\nimport { BreadCumbType, CreateType } from '../types'\nimport { Actions } from '../utilities/helper'\n\ninterface ModalTitleProps {\n  breadCumbLists: BreadCumbType[]\n  toggleBreadCumbIndex: (index: number) => void\n  refetch: any\n}\nconst ModalTitle = ({\n  toggleBreadCumbIndex,\n  breadCumbLists,\n  refetch\n}: ModalTitleProps) => {\n  const selectInputRef: any = useRef(null)\n  const { create }: any = Actions.get()\n\n  const handleChangeFile = async (event: any) => {\n    const link = breadCumbLists[breadCumbLists.length - 1].link\n    const file = event.target.files[0]\n    const fileExtension = file?.type.split('/')[1]\n    const payload: CreateType = {\n      name: file?.name.replace('.' + fileExtension, ''),\n      type: 'FILE',\n      location: link,\n      file: file\n    }\n    const response = await create(payload)\n    if (response?.status) {\n      alert('File Successfully uploaded')\n      refetch()\n    } else {\n      alert('File upload failed')\n    }\n  }\n  const createNewFolder = async () => {\n    const link = breadCumbLists[breadCumbLists.length - 1].link\n    const name: any = prompt('Enter Folder Name')\n    if (name && name !== '') {\n      const payload: CreateType = {\n        name,\n        type: 'FOLDER',\n        location: link,\n        file: ''\n      }\n      const response = await create(payload)\n      if (response?.status) {\n        alert('Folder Successfully created')\n        refetch()\n      } else {\n        alert('Folder create failed')\n      }\n    }\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }}\n    >\n      <Breadcrumb>\n        {breadCumbLists.map(({ title, link }: BreadCumbType, index: number) => {\n          return (\n            <Breadcrumb.Item key={`${title}-${index}-${link}`}>\n              <span\n                onClick={() => toggleBreadCumbIndex(index)}\n                style={{ cursor: 'pointer' }}\n              >\n                {title}\n              </span>\n            </Breadcrumb.Item>\n          )\n        })}\n      </Breadcrumb>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Button icon={<PlusSquareOutlined />} onClick={() => createNewFolder()}>\n          Create Folder\n        </Button>\n        <div style={{ marginLeft: '10px' }} />\n        <Button\n          icon={<UploadOutlined />}\n          onClick={() => selectInputRef?.current?.click()}\n        >\n          Upload File\n        </Button>\n      </div>\n      <input\n        ref={selectInputRef}\n        type='file'\n        onChange={handleChangeFile}\n        style={{ display: 'none' }}\n      />\n    </div>\n  )\n}\n\nexport default ModalTitle\n","import { Button, Modal } from 'antd'\nimport * as React from 'react'\nimport {\n  useQuery,\n  QueryClient,\n  QueryClientProvider\n} from '@tanstack/react-query'\nimport 'antd/dist/antd.css'\nimport { Actions, BeautifyData } from './utilities/helper'\nimport { Loading } from './components'\nimport { Lists, ModalTitle } from './elements'\n// eslint-disable-next-line no-unused-vars\nimport { BreadCumbType, CreateType, listType } from './types'\n\ninterface ReactFileManagerProps {\n  visible: boolean\n  getList: (path: string) => Promise<any>\n  deletePath: (path: string) => Promise<any>\n  renamePath: (path: string, newFileName: string) => Promise<any>\n  create: (payload: CreateType) => Promise<any>\n  onClose: () => void\n  onCopy?: (path: string) => void\n}\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false\n    }\n  }\n})\nexport const ReactFileManager = ({\n  visible,\n  onClose,\n  getList,\n  renamePath,\n  deletePath,\n  create,\n  onCopy\n}: ReactFileManagerProps) => {\n  React.useLayoutEffect(() => {\n    Actions.set({ getList, deletePath, renamePath, onClose, create, onCopy })\n  }, [])\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Body {...{ visible }} key={`${visible}-file-manager-body`} />\n      <React.Fragment />\n    </QueryClientProvider>\n  )\n}\n\nconst Body = ({ visible }: { visible: boolean }) => {\n  const { getList, onClose }: any = Actions.get()\n  const [isVisible, setVisible] = React.useState<boolean>(visible)\n  const [breadCumbLists, setBreadCumbLists] = React.useState<\n    Array<BreadCumbType>\n  >([\n    {\n      title: 'Home',\n      link: '/'\n    }\n  ])\n  const [queryKey, setQueryKey] = React.useState<string>('/')\n  const { isLoading, data, refetch }: any = useQuery(\n    [queryKey],\n    () => {\n      return visible\n        ? getList(queryKey)\n        : new Promise((resolve) => resolve(null))\n    },\n    {\n      enabled: false\n    }\n  )\n  React.useEffect(() => {\n    visible && refetch()\n  }, [visible, queryKey])\n  const handleModalCancel = () => {\n    setVisible(false)\n    onClose()\n  }\n  const updateBreadBumbIndex = (title: string, link: string) => {\n    console.log({ title }, { link })\n    const newBread: any = [...breadCumbLists, { title, link }]\n    let path: string = ''\n    newBread.forEach((item: any, index: number) => {\n      if (index > 0) {\n        path += (index > 1 ? '/' : '') + item.title\n      }\n    })\n    setQueryKey('/' + encodeURIComponent(path))\n    setBreadCumbLists(newBread)\n  }\n  const toggleBreadCumbIndex = (index: number) => {\n    const filteredBreadCumb = breadCumbLists.filter((_, i) => i <= index)\n    let path: string = ''\n    filteredBreadCumb.forEach((item: any, index: number) => {\n      if (index > 0) {\n        path += (index > 1 ? '/' : '') + item.title\n      }\n    })\n    setBreadCumbLists(filteredBreadCumb)\n    setQueryKey('/' + encodeURIComponent(path))\n  }\n  const lists: listType[] = data ? BeautifyData(data) : []\n\n  return (\n    <Modal\n      visible={isVisible}\n      width='90%'\n      onCancel={handleModalCancel}\n      closable={false}\n      title={\n        <ModalTitle {...{ breadCumbLists, refetch, toggleBreadCumbIndex }} />\n      }\n      footer={[\n        <Button key='back' onClick={handleModalCancel}>\n          CLOSE\n        </Button>\n      ]}\n    >\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <Lists data={lists} {...{ refetch, updateBreadBumbIndex }} />\n      )}\n    </Modal>\n  )\n}\n"],"names":["GetFileNameFromLink","link","fileName","split","pop","IsImage","url","test","Actions","actions","set","get","CopyToClipboard","value","textArea","document","createElement","body","appendChild","select","execCommand","remove","BeautifyData","responseData","status","data","lists","map","list","title","type","console","error","Error","GetFileExtension","doc","substring","lastIndexOf","ContainerStyle","height","width","display","justifyContent","alignItems","Loading","React","style","Spin","size","styles","fontSize","color","Folder","FolderFilled","className","File","FileFilled","imageStyle","borderRadius","ImageFile","src","Image","alt","MenuOption","showRenameModal","prefix","refetch","Fragment","Dropdown","overlay","MenuItems","trigger","placement","fmItemMenuIcon","MoreOutlined","deletePath","onCopy","icon","CopyOutlined","label","key","DeleteOutlined","onClick","Number","message","info","confirmation","confirm","alert","setTimeout","Menu","items","FileFolderTitle","Typography","Paragraph","ellipsis","rows","margin","padding","lineHeight","fontWeight","textAlign","RenameModal","details","setRenameDetails","inputRef","useRef","renamePath","_show","ext","replace","confirmLoading","setConfirmLoading","useState","handleOk","current","handleCancel","Modal","visible","onOk","onCancel","Input","addonAfter","defaultValue","autoFocus","onChange","e","currentTarget","Lists","updateBreadBumbIndex","renameDetails","List","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","fmItem","fmItemContainer","cursor","ModalTitle","toggleBreadCumbIndex","breadCumbLists","selectInputRef","create","handleChangeFile","event","length","file","target","files","fileExtension","payload","name","location","response","createNewFolder","prompt","flexDirection","Breadcrumb","index","Button","PlusSquareOutlined","marginLeft","UploadOutlined","click","ref","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","ReactFileManager","onClose","getList","QueryClientProvider","client","Body","isVisible","setVisible","setBreadCumbLists","queryKey","setQueryKey","isLoading","useQuery","Promise","resolve","enabled","handleModalCancel","log","newBread","path","forEach","item","encodeURIComponent","filteredBreadCumb","filter","_","i","closable","footer"],"mappings":"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"}