{"version":3,"file":"index.modern.js","sources":["../src/utilities/helper.ts","../src/components/loading.tsx","../src/components/folder.tsx","../src/components/file.tsx","../src/components/image.tsx","../src/components/menu.tsx","../src/components/title.tsx","../src/components/renamemodal.tsx","../src/elements/lists.tsx","../src/elements/modaltitle.tsx","../src/index.tsx"],"sourcesContent":["export function GetFileNameFromLink(link: string) {\n  const fileName = link.split('/').pop()\n  return fileName\n}\nexport function IsImage(url: string) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url)\n}\nexport const Actions = {\n  actions: {},\n  set(actions: any) {\n    this.actions = actions\n  },\n  get() {\n    return this.actions\n  }\n}\nexport function CopyToClipboard(value: any) {\n  const textArea = document.createElement('textarea')\n  textArea.value = value\n  document.body.appendChild(textArea)\n  textArea.select()\n  document.execCommand('copy')\n  textArea.remove()\n}\nexport function BeautifyData(responseData: any) {\n  const { status, data } = responseData\n  let lists = []\n  if (status) {\n    lists = data.map((list: any) => {\n      return {\n        ...list,\n        title: GetFileNameFromLink(list.link),\n        type: IsImage(list.link) ? 'image' : list.type\n      }\n    })\n  } else {\n    console.error(responseData)\n    throw Error('Failed to retrieve data')\n  }\n  return lists\n}\nexport function GetFileExtension(link: string) {\n  var doc = link.substring(link.lastIndexOf('/'))\n  return doc.substring(doc.lastIndexOf('.'))\n}\n","import { Spin } from 'antd'\nimport React from 'react'\n\nconst ContainerStyle = {\n  height: '200px',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}\nexport default function Loading() {\n  return (\n    <div style={ContainerStyle}>\n      <Spin size='large' />\n    </div>\n  )\n}\n","import React from 'react'\nimport { FolderFilled } from '@ant-design/icons'\n\nconst styles = {\n  fontSize: 50,\n  color: '#3399ff'\n}\nexport default function Folder() {\n  return <FolderFilled style={styles} className='fm-item-icon' />\n}\n","import React from 'react'\nimport { FileFilled } from '@ant-design/icons'\n\nconst styles = {\n  fontSize: 35,\n  color: '#fa7125'\n}\nexport default function File() {\n  return <FileFilled style={styles} className='fm-item-icon' />\n}\n","import { Image } from 'antd'\nimport React from 'react'\n\nconst imageStyle = {\n  borderRadius: '4px'\n}\nexport default function ImageFile({ src }: { src: string }) {\n  return (\n    <div>\n      <Image style={imageStyle} width={65} height={50} src={src} alt='' />\n    </div>\n  )\n}\n","import {\n  CopyOutlined,\n  EditOutlined,\n  MoreOutlined,\n  DeleteOutlined\n} from '@ant-design/icons'\nimport { Dropdown, Menu, message } from 'antd'\nimport React from 'react'\nimport styles from '../styles.module.css'\n// import { DeleteFileFolder } from '../utilities/apicalls'\nimport { Actions, CopyToClipboard } from '../utilities/helper'\n\nconst MenuOption = ({\n  type,\n  link,\n  showRenameModal\n}: {\n  type: string\n  link: string\n  showRenameModal: (data: any) => void\n}) => {\n  return (\n    <React.Fragment>\n      <Dropdown\n        overlay={() => <MenuItems {...{ type, link, showRenameModal }} />}\n        trigger={['click']}\n        placement='bottomRight'\n      >\n        <div className={styles.fmItemMenuIcon}>\n          <MoreOutlined />\n        </div>\n      </Dropdown>\n    </React.Fragment>\n  )\n}\nconst MenuItems = ({\n  type,\n  link,\n  showRenameModal\n}: {\n  type: string\n  link: string\n  showRenameModal: any\n}) => {\n  const { deletePath }: any = Actions.get()\n  const lists = [\n    {\n      icon: <CopyOutlined />,\n      label: 'Copy',\n      key: 0\n    },\n    {\n      icon: <EditOutlined />,\n      label: 'Rename',\n      key: 1\n    },\n    {\n      icon: <DeleteOutlined />,\n      label: 'Delete',\n      key: 2\n    }\n  ]\n  if (type === 'folder') {\n    delete lists[0]\n  }\n  const onClick = async ({ key }: any) => {\n    if (Number(key) === 0) {\n      CopyToClipboard(link)\n      message.info('Copied to clipboard')\n    }\n    if (Number(key) === 2) {\n      const confirmation = confirm('Are you sure you want to remove ?')\n      if (confirmation) {\n        await deletePath(link)\n      }\n    }\n    if (Number(key) === 1) {\n      showRenameModal()\n    }\n  }\n  return <Menu items={lists} onClick={onClick} />\n}\n\nexport default MenuOption\n","import React from 'react'\nimport { Typography } from 'antd'\nconst FileFolderTitle = ({ title }: { title: string }) => {\n  return (\n    <Typography.Paragraph\n      title={title}\n      ellipsis={{ rows: 1 }}\n      style={{\n        margin: 0,\n        height: 30,\n        padding: '4px 6px',\n        fontSize: 12,\n        lineHeight: '22px',\n        fontWeight: 500,\n        textAlign: 'center'\n      }}\n    >\n      {title}\n    </Typography.Paragraph>\n  )\n}\n\nexport default FileFolderTitle\n","import { Input, Modal } from 'antd'\nimport React, { useRef, useState } from 'react'\nimport { Actions, GetFileExtension } from '../utilities/helper'\n\nconst RenameModal = ({\n  details,\n  setRenameDetails\n}: {\n  details: any\n  setRenameDetails: any\n}) => {\n  const inputRef: any = useRef(null)\n  const { renamePath }: any = Actions.get()\n  const { _show, data } = details\n  const { type, title, link } = data\n  const ext = type === 'image' || type === 'file' ? GetFileExtension(title) : ''\n  const fileName = data?.title.replace(ext, '')\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const handleOk = async () => {\n    const confirmation = confirm('Are you sure you want to rename ?')\n    if (!confirmation) return\n    setConfirmLoading(true)\n    await renamePath(link, `${inputRef.current}${ext}`)\n    setRenameDetails({ _show: false, data: {} })\n    setConfirmLoading(false)\n  }\n\n  const handleCancel = () => {\n    setRenameDetails({ _show: false, data: {} })\n  }\n\n  return (\n    <Modal\n      title='Rename'\n      visible={_show}\n      onOk={handleOk}\n      confirmLoading={confirmLoading}\n      onCancel={handleCancel}\n    >\n      <Input\n        addonAfter={ext}\n        defaultValue={fileName}\n        autoFocus\n        onChange={(e) => (inputRef.current = e.currentTarget.value)}\n      />\n    </Modal>\n  )\n}\n\nexport default RenameModal\n","import React, { useState } from 'react'\nimport { List } from 'antd'\nimport {\n  File,\n  FileFolderTitle,\n  Folder,\n  ImageFile,\n  MenuOption,\n  RenameModal\n} from '../components'\n// eslint-disable-next-line no-unused-vars\nimport { listType } from '../types'\nimport styles from '../styles.module.css'\n\ninterface ListProps {\n  data: listType[]\n  updateBreadBumbIndex: (title: string, link: string) => void\n}\nexport default function Lists({ data, updateBreadBumbIndex }: ListProps) {\n  const [renameDetails, setRenameDetails] = useState<{\n    _show: boolean\n    data: {\n      title?: string\n      link?: string\n      type?: string\n    }\n  }>({\n    _show: false,\n    data: {}\n  })\n  function showRenameModal(data: any) {\n    setRenameDetails({ _show: true, data })\n  }\n  return (\n    <React.Fragment>\n      <List\n        grid={{\n          gutter: 16,\n          xs: 3,\n          sm: 4,\n          md: 5,\n          lg: 6,\n          xl: 8,\n          xxl: 9\n        }}\n        dataSource={data}\n        renderItem={({ type, title, link }: any) => (\n          <List.Item>\n            <div className={styles.fmItem}>\n              <div className={styles.fmItemContainer}>\n                {type === 'folder' ? (\n                  <span\n                    onClick={() => updateBreadBumbIndex(title, link)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    <Folder />\n                  </span>\n                ) : type === 'file' ? (\n                  <File />\n                ) : (\n                  <div>\n                    <ImageFile src={link} />\n                  </div>\n                )}\n              </div>\n              <MenuOption\n                {...{ type, link }}\n                showRenameModal={() => showRenameModal({ type, title, link })}\n              />\n              <FileFolderTitle {...{ title }} />\n            </div>\n          </List.Item>\n        )}\n      />\n      {renameDetails?._show ? (\n        <RenameModal\n          details={renameDetails}\n          key={`${renameDetails?._show}-rename-modal`}\n          setRenameDetails={setRenameDetails}\n        />\n      ) : (\n        <React.Fragment />\n      )}\n    </React.Fragment>\n  )\n}\n","import { Breadcrumb, Button } from 'antd'\nimport React, { useRef } from 'react'\nimport { PlusSquareOutlined, UploadOutlined } from '@ant-design/icons'\n// eslint-disable-next-line no-unused-vars\nimport { BreadCumbType, CreateType } from '../types'\nimport { Actions } from '../utilities/helper'\n\ninterface ModalTitleProps {\n  breadCumbLists: BreadCumbType[]\n  toggleBreadCumbIndex: (index: number) => void\n}\nconst ModalTitle = ({\n  toggleBreadCumbIndex,\n  breadCumbLists\n}: ModalTitleProps) => {\n  const selectInputRef: any = useRef(null)\n  const { create }: any = Actions.get()\n\n  const handleChangeFile = async (event: any) => {\n    const link = breadCumbLists[breadCumbLists.length - 1].link\n    const file = event.target.files[0]\n    const fileExtension = file?.type.split('/')[1]\n    const payload: CreateType = {\n      name: file?.name.replace('.' + fileExtension, ''),\n      type: 'FILE',\n      location: link,\n      file: file\n    }\n    const response = await create(payload)\n    if (response?.status) {\n      alert('File Successfully uploaded')\n    } else {\n      alert('File upload failed')\n    }\n  }\n  const createNewFolder = async () => {\n    const link = breadCumbLists[breadCumbLists.length - 1].link\n    const name: any = prompt('Enter Folder Name')\n    if (name && name !== '') {\n      const payload: CreateType = {\n        name,\n        type: 'FOLDER',\n        location: link,\n        file: ''\n      }\n      const response = await create(payload)\n      if (response?.status) {\n        alert('Folder Successfully created')\n      } else {\n        alert('Folder create failed')\n      }\n    }\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }}\n    >\n      <Breadcrumb>\n        {breadCumbLists.map(({ title, link }: BreadCumbType, index: number) => {\n          return (\n            <Breadcrumb.Item key={`${title}-${index}-${link}`}>\n              <span\n                onClick={() => toggleBreadCumbIndex(index)}\n                style={{ cursor: 'pointer' }}\n              >\n                {title}\n              </span>\n            </Breadcrumb.Item>\n          )\n        })}\n      </Breadcrumb>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Button icon={<PlusSquareOutlined />} onClick={() => createNewFolder()}>\n          Create Folder\n        </Button>\n        <div style={{ marginLeft: '10px' }} />\n        <Button\n          icon={<UploadOutlined />}\n          onClick={() => selectInputRef?.current?.click()}\n        >\n          Upload File\n        </Button>\n      </div>\n      <input\n        ref={selectInputRef}\n        type='file'\n        onChange={handleChangeFile}\n        style={{ display: 'none' }}\n      />\n    </div>\n  )\n}\n\nexport default ModalTitle\n","import { Button, Modal } from 'antd'\nimport * as React from 'react'\nimport {\n  useQuery,\n  QueryClient,\n  QueryClientProvider\n} from '@tanstack/react-query'\nimport 'antd/dist/antd.css'\nimport { Actions, BeautifyData } from './utilities/helper'\nimport { Loading } from './components'\nimport { Lists, ModalTitle } from './elements'\n// eslint-disable-next-line no-unused-vars\nimport { BreadCumbType, CreateType, listType } from './types'\n\ninterface ReactFileManagerProps {\n  visible: boolean\n  getList: (path: string) => Promise<any>\n  deletePath: (path: string) => Promise<any>\n  renamePath: (path: string, newFileName: string) => Promise<any>\n  create: (payload: CreateType) => Promise<any>\n  onClose: () => void\n}\nconst queryClient = new QueryClient()\nexport const ReactFileManager = ({\n  visible,\n  onClose,\n  getList,\n  renamePath,\n  deletePath,\n  create\n}: ReactFileManagerProps) => {\n  React.useLayoutEffect(() => {\n    Actions.set({ getList, deletePath, renamePath, onClose, create })\n  }, [])\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Body {...{ visible }} key={`${visible}-file-manager-body`} /> :{' '}\n      <React.Fragment />\n    </QueryClientProvider>\n  )\n}\n\nconst Body = ({ visible }: { visible: boolean }) => {\n  const { getList, onClose }: any = Actions.get()\n  const [isVisible, setVisible] = React.useState<boolean>(visible)\n  const [breadCumbLists, setBreadCumbLists] = React.useState<\n    Array<BreadCumbType>\n  >([\n    {\n      title: 'Home',\n      link: '/'\n    }\n  ])\n  const [queryKey, setQueryKey] = React.useState<string>('/')\n  const { isLoading, data }: any = useQuery([queryKey], () => {\n    return visible ? getList(queryKey) : new Promise((resolve) => resolve(null))\n  })\n  const handleModalCancel = () => {\n    setVisible(false)\n    onClose()\n  }\n  const updateBreadBumbIndex = (title: string, link: string) => {\n    const newBread: any = [...breadCumbLists, { title, link }]\n    let path: string = ''\n    newBread.forEach((item: any, index: number) => {\n      if (index > 0) {\n        path += (index > 1 ? '/' : '') + item.title\n      }\n    })\n    setBreadCumbLists(newBread)\n    setQueryKey('/' + encodeURIComponent(path))\n  }\n  const toggleBreadCumbIndex = (index: number) => {\n    const filteredBreadCumb = breadCumbLists.filter((_, i) => i <= index)\n    let path: string = ''\n    filteredBreadCumb.forEach((item: any, index: number) => {\n      if (index > 0) {\n        path += (index > 1 ? '/' : '') + item.title\n      }\n    })\n    setBreadCumbLists(filteredBreadCumb)\n    setQueryKey('/' + encodeURIComponent(path))\n  }\n  const lists: listType[] = data ? BeautifyData(data) : []\n\n  return (\n    <Modal\n      visible={isVisible}\n      width='90%'\n      onCancel={handleModalCancel}\n      closable={false}\n      title={<ModalTitle {...{ breadCumbLists, toggleBreadCumbIndex }} />}\n      footer={[\n        <Button key='back' onClick={handleModalCancel}>\n          CLOSE\n        </Button>\n      ]}\n    >\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <Lists data={lists} {...{ updateBreadBumbIndex }} />\n      )}\n    </Modal>\n  )\n}\n"],"names":["GetFileNameFromLink","link","fileName","split","pop","IsImage","url","test","Actions","actions","set","get","CopyToClipboard","value","textArea","document","createElement","body","appendChild","select","execCommand","remove","BeautifyData","responseData","status","data","lists","map","list","title","type","console","error","Error","GetFileExtension","doc","substring","lastIndexOf","ContainerStyle","height","width","display","justifyContent","alignItems","Loading","React","style","Spin","size","styles","fontSize","color","Folder","FolderFilled","className","File","FileFilled","imageStyle","borderRadius","ImageFile","src","Image","alt","MenuOption","showRenameModal","Fragment","Dropdown","overlay","MenuItems","trigger","placement","fmItemMenuIcon","MoreOutlined","deletePath","icon","CopyOutlined","label","key","EditOutlined","DeleteOutlined","onClick","Number","message","info","confirmation","confirm","Menu","items","FileFolderTitle","Typography","Paragraph","ellipsis","rows","margin","padding","lineHeight","fontWeight","textAlign","RenameModal","details","setRenameDetails","inputRef","useRef","renamePath","_show","ext","replace","confirmLoading","setConfirmLoading","useState","handleOk","current","handleCancel","Modal","visible","onOk","onCancel","Input","addonAfter","defaultValue","autoFocus","onChange","e","currentTarget","Lists","updateBreadBumbIndex","renameDetails","List","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","fmItem","fmItemContainer","cursor","ModalTitle","toggleBreadCumbIndex","breadCumbLists","selectInputRef","create","handleChangeFile","event","length","file","target","files","fileExtension","payload","name","location","response","alert","createNewFolder","prompt","flexDirection","Breadcrumb","index","Button","PlusSquareOutlined","marginLeft","UploadOutlined","click","ref","queryClient","QueryClient","ReactFileManager","onClose","getList","QueryClientProvider","client","Body","isVisible","setVisible","setBreadCumbLists","queryKey","setQueryKey","isLoading","useQuery","Promise","resolve","handleModalCancel","newBread","path","forEach","item","encodeURIComponent","filteredBreadCumb","filter","_","i","closable","footer"],"mappings":";;;;;;SAAgBA,oBAAoBC;EAClC,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAjB;EACA,OAAOF,QAAP;AACD;SACeG,QAAQC;EACtB,OAAO,sCAAsCC,IAAtC,CAA2CD,GAA3C,CAAP;AACD;AACM,MAAME,OAAO,GAAG;EACrBC,OAAO,EAAE,EADY;;EAErBC,GAAG,CAACD,OAAD;IACD,KAAKA,OAAL,GAAeA,OAAf;GAHmB;;EAKrBE,GAAG;IACD,OAAO,KAAKF,OAAZ;;;AANmB,CAAhB;SASSG,gBAAgBC;EAC9B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;EACAF,QAAQ,CAACD,KAAT,GAAiBA,KAAjB;EACAE,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,QAA1B;EACAA,QAAQ,CAACK,MAAT;EACAJ,QAAQ,CAACK,WAAT,CAAqB,MAArB;EACAN,QAAQ,CAACO,MAAT;AACD;SACeC,aAAaC;EAC3B,MAAM;IAAEC,MAAF;IAAUC;MAASF,YAAzB;EACA,IAAIG,KAAK,GAAG,EAAZ;;EACA,IAAIF,MAAJ,EAAY;IACVE,KAAK,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD;MACf,OAAO,EACL,GAAGA,IADE;QAELC,KAAK,EAAE7B,mBAAmB,CAAC4B,IAAI,CAAC3B,IAAN,CAFrB;QAGL6B,IAAI,EAAEzB,OAAO,CAACuB,IAAI,CAAC3B,IAAN,CAAP,GAAqB,OAArB,GAA+B2B,IAAI,CAACE;OAH5C;KADM,CAAR;GADF,MAQO;IACLC,OAAO,CAACC,KAAR,CAAcT,YAAd;IACA,MAAMU,KAAK,CAAC,yBAAD,CAAX;;;EAEF,OAAOP,KAAP;AACD;SACeQ,iBAAiBjC;EAC/B,IAAIkC,GAAG,GAAGlC,IAAI,CAACmC,SAAL,CAAenC,IAAI,CAACoC,WAAL,CAAiB,GAAjB,CAAf,CAAV;EACA,OAAOF,GAAG,CAACC,SAAJ,CAAcD,GAAG,CAACE,WAAJ,CAAgB,GAAhB,CAAd,CAAP;AACD;;ACzCD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,OADa;EAErBC,KAAK,EAAE,MAFc;EAGrBC,OAAO,EAAE,MAHY;EAIrBC,cAAc,EAAE,QAJK;EAKrBC,UAAU,EAAE;AALS,CAAvB;AAOA,SAAwBC;EACtB,OACEC,4BAAA,MAAA;IAAKC,KAAK,EAAER;GAAZ,EACEO,4BAAA,CAACE,IAAD;IAAMC,IAAI,EAAC;GAAX,CADF,CADF;AAKD;;ACbD,MAAMC,MAAM,GAAG;EACbC,QAAQ,EAAE,EADG;EAEbC,KAAK,EAAE;AAFM,CAAf;AAIA,SAAwBC;EACtB,OAAOP,4BAAA,CAACQ,YAAD;IAAcP,KAAK,EAAEG;IAAQK,SAAS,EAAC;GAAvC,CAAP;AACD;;ACND,MAAML,QAAM,GAAG;EACbC,QAAQ,EAAE,EADG;EAEbC,KAAK,EAAE;AAFM,CAAf;AAIA,SAAwBI;EACtB,OAAOV,4BAAA,CAACW,UAAD;IAAYV,KAAK,EAAEG;IAAQK,SAAS,EAAC;GAArC,CAAP;AACD;;ACND,MAAMG,UAAU,GAAG;EACjBC,YAAY,EAAE;AADG,CAAnB;AAGA,SAAwBC,UAAU;EAAEC;AAAF;EAChC,OACEf,4BAAA,MAAA,MAAA,EACEA,4BAAA,CAACgB,KAAD;IAAOf,KAAK,EAAEW;IAAYjB,KAAK,EAAE;IAAID,MAAM,EAAE;IAAIqB,GAAG,EAAEA;IAAKE,GAAG,EAAC;GAA/D,CADF,CADF;AAKD;;;;ACAD,MAAMC,UAAU,GAAG,CAAC;EAClBjC,IADkB;EAElB7B,IAFkB;EAGlB+D;AAHkB,CAAD;EASjB,OACEnB,4BAAA,CAACA,cAAK,CAACoB,QAAP,MAAA,EACEpB,4BAAA,CAACqB,QAAD;IACEC,OAAO,EAAE,MAAMtB,4BAAA,CAACuB,SAAD,oBAAe;MAAEtC,IAAF;MAAQ7B,IAAR;MAAc+D;MAA7B;IACfK,OAAO,EAAE,CAAC,OAAD;IACTC,SAAS,EAAC;GAHZ,EAKEzB,4BAAA,MAAA;IAAKS,SAAS,EAAEL,QAAM,CAACsB;GAAvB,EACE1B,4BAAA,CAAC2B,YAAD,MAAA,CADF,CALF,CADF,CADF;AAaD,CAtBD;;AAuBA,MAAMJ,SAAS,GAAG,CAAC;EACjBtC,IADiB;EAEjB7B,IAFiB;EAGjB+D;AAHiB,CAAD;EAShB,MAAM;IAAES;MAAoBjE,OAAO,CAACG,GAAR,EAA5B;EACA,MAAMe,KAAK,GAAG,CACZ;IACEgD,IAAI,EAAE7B,4BAAA,CAAC8B,YAAD,MAAA,CADR;IAEEC,KAAK,EAAE,MAFT;IAGEC,GAAG,EAAE;GAJK,EAMZ;IACEH,IAAI,EAAE7B,4BAAA,CAACiC,YAAD,MAAA,CADR;IAEEF,KAAK,EAAE,QAFT;IAGEC,GAAG,EAAE;GATK,EAWZ;IACEH,IAAI,EAAE7B,4BAAA,CAACkC,cAAD,MAAA,CADR;IAEEH,KAAK,EAAE,QAFT;IAGEC,GAAG,EAAE;GAdK,CAAd;;EAiBA,IAAI/C,IAAI,KAAK,QAAb,EAAuB;IACrB,OAAOJ,KAAK,CAAC,CAAD,CAAZ;;;EAEF,MAAMsD,OAAO,GAAG,OAAO;IAAEH;GAAT;IACd,IAAII,MAAM,CAACJ,GAAD,CAAN,KAAgB,CAApB,EAAuB;MACrBjE,eAAe,CAACX,IAAD,CAAf;MACAiF,OAAO,CAACC,IAAR,CAAa,qBAAb;;;IAEF,IAAIF,MAAM,CAACJ,GAAD,CAAN,KAAgB,CAApB,EAAuB;MACrB,MAAMO,YAAY,GAAGC,OAAO,CAAC,mCAAD,CAA5B;;MACA,IAAID,YAAJ,EAAkB;QAChB,MAAMX,UAAU,CAACxE,IAAD,CAAhB;;;;IAGJ,IAAIgF,MAAM,CAACJ,GAAD,CAAN,KAAgB,CAApB,EAAuB;MACrBb,eAAe;;GAZnB;;EAeA,OAAOnB,4BAAA,CAACyC,IAAD;IAAMC,KAAK,EAAE7D;IAAOsD,OAAO,EAAEA;GAA7B,CAAP;AACD,CA9CD;;ACjCA,MAAMQ,eAAe,GAAG,CAAC;EAAE3D;AAAF,CAAD;EACtB,OACEgB,4BAAA,CAAC4C,UAAU,CAACC,SAAZ;IACE7D,KAAK,EAAEA;IACP8D,QAAQ,EAAE;MAAEC,IAAI,EAAE;;IAClB9C,KAAK,EAAE;MACL+C,MAAM,EAAE,CADH;MAELtD,MAAM,EAAE,EAFH;MAGLuD,OAAO,EAAE,SAHJ;MAIL5C,QAAQ,EAAE,EAJL;MAKL6C,UAAU,EAAE,MALP;MAMLC,UAAU,EAAE,GANP;MAOLC,SAAS,EAAE;;GAVf,EAaGpE,KAbH,CADF;AAiBD,CAlBD;;ACEA,MAAMqE,WAAW,GAAG,CAAC;EACnBC,OADmB;EAEnBC;AAFmB,CAAD;EAOlB,MAAMC,QAAQ,GAAQC,MAAM,CAAC,IAAD,CAA5B;EACA,MAAM;IAAEC;MAAoB/F,OAAO,CAACG,GAAR,EAA5B;EACA,MAAM;IAAE6F,KAAF;IAAS/E;MAAS0E,OAAxB;EACA,MAAM;IAAErE,IAAF;IAAQD,KAAR;IAAe5B;MAASwB,IAA9B;EACA,MAAMgF,GAAG,GAAG3E,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,MAA7B,GAAsCI,gBAAgB,CAACL,KAAD,CAAtD,GAAgE,EAA5E;EACA,MAAM3B,QAAQ,GAAGuB,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAN,CAAY6E,OAAZ,CAAoBD,GAApB,EAAyB,EAAzB,CAAjB;EACA,MAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCC,QAAQ,CAAC,KAAD,CAApD;;EACA,MAAMC,QAAQ,GAAG;IACf,MAAM1B,YAAY,GAAGC,OAAO,CAAC,mCAAD,CAA5B;IACA,IAAI,CAACD,YAAL,EAAmB;IACnBwB,iBAAiB,CAAC,IAAD,CAAjB;IACA,MAAML,UAAU,CAACtG,IAAD,KAAUoG,QAAQ,CAACU,UAAUN,KAA7B,CAAhB;IACAL,gBAAgB,CAAC;MAAEI,KAAK,EAAE,KAAT;MAAgB/E,IAAI,EAAE;KAAvB,CAAhB;IACAmF,iBAAiB,CAAC,KAAD,CAAjB;GANF;;EASA,MAAMI,YAAY,GAAG;IACnBZ,gBAAgB,CAAC;MAAEI,KAAK,EAAE,KAAT;MAAgB/E,IAAI,EAAE;KAAvB,CAAhB;GADF;;EAIA,OACEoB,4BAAA,CAACoE,KAAD;IACEpF,KAAK,EAAC;IACNqF,OAAO,EAAEV;IACTW,IAAI,EAAEL;IACNH,cAAc,EAAEA;IAChBS,QAAQ,EAAEJ;GALZ,EAOEnE,4BAAA,CAACwE,KAAD;IACEC,UAAU,EAAEb;IACZc,YAAY,EAAErH;IACdsH,SAAS;IACTC,QAAQ,EAAGC,CAAD,IAAQrB,QAAQ,CAACU,OAAT,GAAmBW,CAAC,CAACC,aAAF,CAAgB9G;GAJvD,CAPF,CADF;AAgBD,CA3CD;;SCcwB+G,MAAM;EAAEnG,IAAF;EAAQoG;AAAR;EAC5B,MAAM,CAACC,aAAD,EAAgB1B,gBAAhB,IAAoCS,QAAQ,CAO/C;IACDL,KAAK,EAAE,KADN;IAED/E,IAAI,EAAE;GAT0C,CAAlD;;EAWA,SAASuC,eAAT,CAAyBvC,IAAzB;IACE2E,gBAAgB,CAAC;MAAEI,KAAK,EAAE,IAAT;MAAe/E;KAAhB,CAAhB;;;EAEF,OACEoB,4BAAA,CAACA,cAAK,CAACoB,QAAP,MAAA,EACEpB,4BAAA,CAACkF,IAAD;IACEC,IAAI,EAAE;MACJC,MAAM,EAAE,EADJ;MAEJC,EAAE,EAAE,CAFA;MAGJC,EAAE,EAAE,CAHA;MAIJC,EAAE,EAAE,CAJA;MAKJC,EAAE,EAAE,CALA;MAMJC,EAAE,EAAE,CANA;MAOJC,GAAG,EAAE;;IAEPC,UAAU,EAAE/G;IACZgH,UAAU,EAAE,CAAC;MAAE3G,IAAF;MAAQD,KAAR;MAAe5B;KAAhB,KACV4C,4BAAA,CAACkF,IAAI,CAACW,IAAN,MAAA,EACE7F,4BAAA,MAAA;MAAKS,SAAS,EAAEL,QAAM,CAAC0F;KAAvB,EACE9F,4BAAA,MAAA;MAAKS,SAAS,EAAEL,QAAM,CAAC2F;KAAvB,EACG9G,IAAI,KAAK,QAAT,GACCe,4BAAA,OAAA;MACEmC,OAAO,EAAE,MAAM6C,oBAAoB,CAAChG,KAAD,EAAQ5B,IAAR;MACnC6C,KAAK,EAAE;QAAE+F,MAAM,EAAE;;KAFnB,EAIEhG,4BAAA,CAACO,MAAD,MAAA,CAJF,CADD,GAOGtB,IAAI,KAAK,MAAT,GACFe,4BAAA,CAACU,IAAD,MAAA,CADE,GAGFV,4BAAA,MAAA,MAAA,EACEA,4BAAA,CAACc,SAAD;MAAWC,GAAG,EAAE3D;KAAhB,CADF,CAXJ,CADF,EAiBE4C,4BAAA,CAACkB,UAAD,oBACM;MAAEjC,IAAF;MAAQ7B;;MACZ+D,eAAe,EAAE,MAAMA,eAAe,CAAC;QAAElC,IAAF;QAAQD,KAAR;QAAe5B;OAAhB;MAFxC,CAjBF,EAqBE4C,4BAAA,CAAC2C,eAAD,oBAAqB;MAAE3D;MAAvB,CArBF,CADF;GAZJ,CADF,EAwCGiG,aAAa,SAAb,IAAAA,aAAa,WAAb,IAAAA,aAAa,CAAEtB,KAAf,GACC3D,4BAAA,CAACqD,WAAD;IACEC,OAAO,EAAE2B;IACTjD,GAAG,KAAKiD,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEtB;IACvBJ,gBAAgB,EAAEA;GAHpB,CADD,GAOCvD,4BAAA,CAACA,cAAK,CAACoB,QAAP,MAAA,CA/CJ,CADF;AAoDD;;AC1ED,MAAM6E,UAAU,GAAG,CAAC;EAClBC,oBADkB;EAElBC;AAFkB,CAAD;EAIjB,MAAMC,cAAc,GAAQ3C,MAAM,CAAC,IAAD,CAAlC;EACA,MAAM;IAAE4C;MAAgB1I,OAAO,CAACG,GAAR,EAAxB;;EAEA,MAAMwI,gBAAgB,GAAG,MAAOC,KAAP;IACvB,MAAMnJ,IAAI,GAAG+I,cAAc,CAACA,cAAc,CAACK,MAAf,GAAwB,CAAzB,CAAd,CAA0CpJ,IAAvD;IACA,MAAMqJ,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;IACA,MAAMC,aAAa,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAExH,IAAN,CAAW3B,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAtB;IACA,MAAMuJ,OAAO,GAAe;MAC1BC,IAAI,EAAEL,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,IAAN,CAAWjD,OAAX,CAAmB,MAAM+C,aAAzB,EAAwC,EAAxC,CADoB;MAE1B3H,IAAI,EAAE,MAFoB;MAG1B8H,QAAQ,EAAE3J,IAHgB;MAI1BqJ,IAAI,EAAEA;KAJR;IAMA,MAAMO,QAAQ,GAAG,MAAMX,MAAM,CAACQ,OAAD,CAA7B;;IACA,IAAIG,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAErI,MAAd,EAAsB;MACpBsI,KAAK,CAAC,4BAAD,CAAL;KADF,MAEO;MACLA,KAAK,CAAC,oBAAD,CAAL;;GAdJ;;EAiBA,MAAMC,eAAe,GAAG;IACtB,MAAM9J,IAAI,GAAG+I,cAAc,CAACA,cAAc,CAACK,MAAf,GAAwB,CAAzB,CAAd,CAA0CpJ,IAAvD;IACA,MAAM0J,IAAI,GAAQK,MAAM,CAAC,mBAAD,CAAxB;;IACA,IAAIL,IAAI,IAAIA,IAAI,KAAK,EAArB,EAAyB;MACvB,MAAMD,OAAO,GAAe;QAC1BC,IAD0B;QAE1B7H,IAAI,EAAE,QAFoB;QAG1B8H,QAAQ,EAAE3J,IAHgB;QAI1BqJ,IAAI,EAAE;OAJR;MAMA,MAAMO,QAAQ,GAAG,MAAMX,MAAM,CAACQ,OAAD,CAA7B;;MACA,IAAIG,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAErI,MAAd,EAAsB;QACpBsI,KAAK,CAAC,6BAAD,CAAL;OADF,MAEO;QACLA,KAAK,CAAC,sBAAD,CAAL;;;GAdN;;EAkBA,OACEjH,4BAAA,MAAA;IACEC,KAAK,EAAE;MACLL,OAAO,EAAE,MADJ;MAELwH,aAAa,EAAE,KAFV;MAGLvH,cAAc,EAAE;;GAJpB,EAOEG,4BAAA,CAACqH,UAAD,MAAA,EACGlB,cAAc,CAACrH,GAAf,CAAmB,CAAC;IAAEE,KAAF;IAAS5B;GAAV,EAAiCkK,KAAjC;IAClB,OACEtH,4BAAA,CAACqH,UAAU,CAACxB,IAAZ;MAAiB7D,GAAG,KAAKhD,SAASsI,SAASlK;KAA3C,EACE4C,4BAAA,OAAA;MACEmC,OAAO,EAAE,MAAM+D,oBAAoB,CAACoB,KAAD;MACnCrH,KAAK,EAAE;QAAE+F,MAAM,EAAE;;KAFnB,EAIGhH,KAJH,CADF,CADF;GADD,CADH,CAPF,EAqBEgB,4BAAA,MAAA;IACEC,KAAK,EAAE;MACLL,OAAO,EAAE,MADJ;MAELwH,aAAa,EAAE,KAFV;MAGLvH,cAAc,EAAE;;GAJpB,EAOEG,4BAAA,CAACuH,MAAD;IAAQ1F,IAAI,EAAE7B,4BAAA,CAACwH,kBAAD,MAAA;IAAwBrF,OAAO,EAAE,MAAM+E,eAAe;GAApE,iBAAA,CAPF,EAUElH,4BAAA,MAAA;IAAKC,KAAK,EAAE;MAAEwH,UAAU,EAAE;;GAA1B,CAVF,EAWEzH,4BAAA,CAACuH,MAAD;IACE1F,IAAI,EAAE7B,4BAAA,CAAC0H,cAAD,MAAA;IACNvF,OAAO,EAAE;MAAA;;MAAA,OAAMiE,cAAN,aAAMA,cAAN,gDAAMA,cAAc,CAAElC,OAAtB,0DAAM,sBAAyByD,KAAzB,EAAN;;GAFX,eAAA,CAXF,CArBF,EAuCE3H,4BAAA,QAAA;IACE4H,GAAG,EAAExB;IACLnH,IAAI,EAAC;IACL2F,QAAQ,EAAE0B;IACVrG,KAAK,EAAE;MAAEL,OAAO,EAAE;;GAJpB,CAvCF,CADF;AAgDD,CA1FD;;ACWA,MAAMiI,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA,MAAaC,gBAAgB,GAAG,CAAC;EAC/B1D,OAD+B;EAE/B2D,OAF+B;EAG/BC,OAH+B;EAI/BvE,UAJ+B;EAK/B9B,UAL+B;EAM/ByE;AAN+B,CAAD;EAQ9BrG,eAAA,CAAsB;IACpBrC,OAAO,CAACE,GAAR,CAAY;MAAEoK,OAAF;MAAWrG,UAAX;MAAuB8B,UAAvB;MAAmCsE,OAAnC;MAA4C3B;KAAxD;GADF,EAEG,EAFH;EAGA,OACErG,aAAA,CAACkI,mBAAD;IAAqBC,MAAM,EAAEN;GAA7B,EACE7H,aAAA,CAACoI,IAAD,oBAAU;IAAE/D;;IAAWrC,GAAG,KAAKqC;IAA/B,CADF,MAAA,EACmE,GADnE,EAEErE,aAAA,CAACA,QAAD,MAAA,CAFF,CADF;AAMD,CAjBM;;AAmBP,MAAMoI,IAAI,GAAG,CAAC;EAAE/D;AAAF,CAAD;EACX,MAAM;IAAE4D,OAAF;IAAWD;MAAiBrK,OAAO,CAACG,GAAR,EAAlC;EACA,MAAM,CAACuK,SAAD,EAAYC,UAAZ,IAA0BtI,QAAA,CAAwBqE,OAAxB,CAAhC;EACA,MAAM,CAAC8B,cAAD,EAAiBoC,iBAAjB,IAAsCvI,QAAA,CAE1C,CACA;IACEhB,KAAK,EAAE,MADT;IAEE5B,IAAI,EAAE;GAHR,CAF0C,CAA5C;EAQA,MAAM,CAACoL,QAAD,EAAWC,WAAX,IAA0BzI,QAAA,CAAuB,GAAvB,CAAhC;EACA,MAAM;IAAE0I,SAAF;IAAa9J;MAAc+J,QAAQ,CAAC,CAACH,QAAD,CAAD,EAAa;IACpD,OAAOnE,OAAO,GAAG4D,OAAO,CAACO,QAAD,CAAV,GAAuB,IAAII,OAAJ,CAAaC,OAAD,IAAaA,OAAO,CAAC,IAAD,CAAhC,CAArC;GADuC,CAAzC;;EAGA,MAAMC,iBAAiB,GAAG;IACxBR,UAAU,CAAC,KAAD,CAAV;IACAN,OAAO;GAFT;;EAIA,MAAMhD,oBAAoB,GAAG,CAAChG,KAAD,EAAgB5B,IAAhB;IAC3B,MAAM2L,QAAQ,GAAQ,CAAC,GAAG5C,cAAJ,EAAoB;MAAEnH,KAAF;MAAS5B;KAA7B,CAAtB;IACA,IAAI4L,IAAI,GAAW,EAAnB;IACAD,QAAQ,CAACE,OAAT,CAAiB,CAACC,IAAD,EAAY5B,KAAZ;MACf,IAAIA,KAAK,GAAG,CAAZ,EAAe;QACb0B,IAAI,IAAI,CAAC1B,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAnB,IAAyB4B,IAAI,CAAClK,KAAtC;;KAFJ;IAKAuJ,iBAAiB,CAACQ,QAAD,CAAjB;IACAN,WAAW,CAAC,MAAMU,kBAAkB,CAACH,IAAD,CAAzB,CAAX;GATF;;EAWA,MAAM9C,oBAAoB,GAAIoB,KAAD;IAC3B,MAAM8B,iBAAiB,GAAGjD,cAAc,CAACkD,MAAf,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,IAAIjC,KAArC,CAA1B;IACA,IAAI0B,IAAI,GAAW,EAAnB;IACAI,iBAAiB,CAACH,OAAlB,CAA0B,CAACC,IAAD,EAAY5B,KAAZ;MACxB,IAAIA,KAAK,GAAG,CAAZ,EAAe;QACb0B,IAAI,IAAI,CAAC1B,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAnB,IAAyB4B,IAAI,CAAClK,KAAtC;;KAFJ;IAKAuJ,iBAAiB,CAACa,iBAAD,CAAjB;IACAX,WAAW,CAAC,MAAMU,kBAAkB,CAACH,IAAD,CAAzB,CAAX;GATF;;EAWA,MAAMnK,KAAK,GAAeD,IAAI,GAAGH,YAAY,CAACG,IAAD,CAAf,GAAwB,EAAtD;EAEA,OACEoB,aAAA,CAACoE,KAAD;IACEC,OAAO,EAAEgE;IACT1I,KAAK,EAAC;IACN4E,QAAQ,EAAEuE;IACVU,QAAQ,EAAE;IACVxK,KAAK,EAAEgB,aAAA,CAACiG,UAAD,oBAAgB;MAAEE,cAAF;MAAkBD;MAAlC;IACPuD,MAAM,EAAE,CACNzJ,aAAA,CAACuH,MAAD;MAAQvF,GAAG,EAAC;MAAOG,OAAO,EAAE2G;KAA5B,SAAA,CADM;GANV,EAYGJ,SAAS,GACR1I,aAAA,CAACD,OAAD,MAAA,CADQ,GAGRC,aAAA,CAAC+E,KAAD;IAAOnG,IAAI,EAAEC;KAAW;IAAEmG;IAA1B,CAfJ,CADF;AAoBD,CA/DD;;;;"}